@page "/system/user"

@using BlazorShared.Layout
@using BlazorShared.Components.DataTable
@using GeneralCommon.Dtos.Admin.User
@using GeneralCommon.Extensions

@using GeneralCommon.Attributes
@attribute [Page("/system/user","用户管理")]
@attribute [Authorize]

@inherits CultureComponentBase
@layout MainLayout
@inject MasaBlazor MasaBlazor


<MRow>
    <MCol Md="2" Cols="12">
        <BlazorShared.Pages.Admin.Component.DeptTree Orgs="Orgs" SelectDeptEvent="CallSeletDept"></BlazorShared.Pages.Admin.Component.DeptTree>
    </MCol>

    <MCol Md="10" Cols="12">
       <div style="height: calc(100vh - 150px)">
                <AppDataTable @ref="_table" TItem="AddUserInput" SearchItem="PageUserInput"
                              AddItem="AddUserInput" EditItem="AddUserInput" SearchModel="@SearchInput"
                              QueryCall="QueryCall" AddCall="AddCall" EditCall="EditCall" DeleteCall="DeleteCall"
                              EditShowCall="EditShowCall"
                              FilterHeaders="FilterHeaders" IsShowClearSearch
                              SearchItemFilter="SearchFilter"
                              
                              ShowSelect="false"
                           
                              ShowQueryButton
                              ShowDetailButton
                              ShowAddButton=@UserConfig.IsHasButtonWithRole("sysUser:add")
                              ShowDeleteButton=@UserConfig.IsHasButtonWithRole("sysUser:delete")
                              ShowEditButton=@UserConfig.IsHasButtonWithRole("sysUser:update")
                                    IsShowSearchKey>


                    <ItemColOperTemplate>
                        <MList Dense>
                            @if (UserConfig.IsHasButtonWithRole("sysUser:resetPwd"))
                            {
                                <MListItem OnClick="()=>ResetPwd(context.Item)">
                                    <MListItemTitle Class="ml-2"> 重置密码 </MListItemTitle>
                                </MListItem>
                            }

                      



                        </MList>
                    </ItemColOperTemplate>

                    <ItemColTemplate>
                       @{ 
                           context.Item.IsRender = true;
                        @switch (context.Header.Value)
                        {
                            case nameof(context.Item.Avatar):
                                if (context.Item.NickName.IsNotNullOrEmpty())
                                {
                                    <MAvatar Color="teal"
                                 Size="30">
                                        <span class="white--text text-h8"> @context.Item.NickName.Substring(0,1)</span>
                                </MAvatar>

                               
                            }
                                break;
                                case nameof(context.Item.Status):
                                <MSwitch TValue="GeneralCommon.Enums.StatusEnum" ValueChanged="x=>StatusChanged(x,context.Item)" Value="context.Item.Status" TrueValue="GeneralCommon.Enums.StatusEnum.Enable" FalseValue="GeneralCommon.Enums.StatusEnum.Disable"></MSwitch>
                                break;
                            default:
                               context.Item.IsRender = false;
                                break;
                        }
                        }

                    </ItemColTemplate>

                    <EditTemplate>
                        <UserListEdit SelectUser="@context" Orgs="Orgs" Poss="Poss" Roles="Roles"></UserListEdit>
                    </EditTemplate>

                    <AddTemplate>
                    <UserListEdit SelectUser="@context" Orgs="Orgs" Poss="Poss" Roles="Roles"></UserListEdit>
                    </AddTemplate>

                </AppDataTable>
      </div>
     
    </MCol>
</MRow>

